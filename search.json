[
  {
    "objectID": "listing-danl-310-hw.html",
    "href": "listing-danl-310-hw.html",
    "title": "DANL 310 - Homework",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "econml.html",
    "href": "econml.html",
    "title": "Causal Machine Learning Bookmarks",
    "section": "",
    "text": "Dive into Causal Machine Learning, The World Bank and Pontificia Universidad Cat√≥lica del Per√∫, Alexander Quispe et. al. \nMIT 14.388: Inference on Causal and Structural Parameters Using ML and AI, Department of Economics, MIT, Victor Chernozukhov\n\nPython Website\nJulia Website \n\nMGTECON 634: ML-based Causal Inference, Stanford, Susan Athey \nMachine Learning & Causal Inference: A Short Course, Stanford, Susan Athey, Jan Spiess, and Stefan Wager\n\nTutorial\nYouTube \n\n2018 American Economic Association Continuing Education: Machine Learning and Econometrics, Susan Athey and Guido Imbens \nCausal Inference and Machine Learning in Practice with EconML and CausalML: Industrial Use Cases at Microsoft, TripAdvisor, Uber \nDoubleML: Python and R Packages for the Double/Debiased Machine Learning Framework, P. Bach, V. Chernozhukov, M. S. Kurz, and M. Spindler \nEconML: A Python Package for ML-based Heterogeneous Treatment Effects Estimation, Microsoft \nCausalML: A Python Package for ML-based Causal Inference, Uber"
  },
  {
    "objectID": "econml.html#causal-machine-learning",
    "href": "econml.html#causal-machine-learning",
    "title": "Causal Machine Learning Bookmarks",
    "section": "",
    "text": "Dive into Causal Machine Learning, The World Bank and Pontificia Universidad Cat√≥lica del Per√∫, Alexander Quispe et. al. \nMIT 14.388: Inference on Causal and Structural Parameters Using ML and AI, Department of Economics, MIT, Victor Chernozukhov\n\nPython Website\nJulia Website \n\nMGTECON 634: ML-based Causal Inference, Stanford, Susan Athey \nMachine Learning & Causal Inference: A Short Course, Stanford, Susan Athey, Jan Spiess, and Stefan Wager\n\nTutorial\nYouTube \n\n2018 American Economic Association Continuing Education: Machine Learning and Econometrics, Susan Athey and Guido Imbens \nCausal Inference and Machine Learning in Practice with EconML and CausalML: Industrial Use Cases at Microsoft, TripAdvisor, Uber \nDoubleML: Python and R Packages for the Double/Debiased Machine Learning Framework, P. Bach, V. Chernozhukov, M. S. Kurz, and M. Spindler \nEconML: A Python Package for ML-based Heterogeneous Treatment Effects Estimation, Microsoft \nCausalML: A Python Package for ML-based Causal Inference, Uber"
  },
  {
    "objectID": "econml.html#machine-learning-and-big-data",
    "href": "econml.html#machine-learning-and-big-data",
    "title": "Causal Machine Learning Bookmarks",
    "section": "Machine Learning and Big Data",
    "text": "Machine Learning and Big Data\n\n2023 American Economic Association Continuing Education: Machine Learning and Big Data, Melissa Dell and Matthew Harding \nMachine Learning for Economists (ml4econ), Bank of Israel, Itamar Caspi and Ariel Mansura"
  },
  {
    "objectID": "econml.html#causal-inference",
    "href": "econml.html#causal-inference",
    "title": "Causal Machine Learning Bookmarks",
    "section": "Causal Inference",
    "text": "Causal Inference\n\nCausal Inference: The Mixtape, Scott Cunningham \nCausal Inference for the Brave and True, Matheus Facure \nCausal Inference and Its Applications in Online Industry, Alex Deng \nApplied Empirical Methods, Yale SOM, Paul Goldsmith-Pinkham\n\nYouTube \n\nCausal Inference with Panel Data, Department of Political Science, Stanford, Yiqing Xu\n\nYouTube \n\nCausal Inference: What If, Miguel A. Hern√°n and James M. Robins \nRecent Developments in Difference-in-Differences, Vienna University of Economics and Business, Asjad Naqvi \nDifference-in-Differences Blog \nGov 2003: Causal Inference, Department of Government, Harvard, Matthew Blackwell"
  },
  {
    "objectID": "econml.html#researchers-in-causal-machine-learning",
    "href": "econml.html#researchers-in-causal-machine-learning",
    "title": "Causal Machine Learning Bookmarks",
    "section": "Researchers in Causal Machine Learning",
    "text": "Researchers in Causal Machine Learning\n\nSusan Athey \nAlexandre Belloni \nVictor Chernozhukov \nCarlos Cinelli \nChristian Hansen \nGuido Imbens\nJann Spiess \nStefan Wager"
  },
  {
    "objectID": "listing-danl-310-cw.html",
    "href": "listing-danl-310-cw.html",
    "title": "DANL 310 - Classwork",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nClasswork 4\n\n\nThe Layered Grammar of Graphics\n\n\nJanuary 29, 2025\n\n\n\n\nClasswork 3\n\n\nQuarto Website Basics\n\n\nJanuary 27, 2025\n\n\n\n\nClasswork 2\n\n\nMarkdown Basics\n\n\nJanuary 27, 2025\n\n\n\n\nClasswork 1\n\n\nBuilding a Personal Website using Git, GitHub, and RStudio with Quarto\n\n\nJanuary 22, 2025\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DANL 310-01: Data Visualization and Presentation, Spring 2025",
    "section": "",
    "text": "Welcome! üëã\n\\(-\\) Explore, Learn, and Grow with Data Analytics! üåü"
  },
  {
    "objectID": "index.html#bullet-lecture-slides",
    "href": "index.html#bullet-lecture-slides",
    "title": "DANL 310-01: Data Visualization and Presentation, Spring 2025",
    "section": "\\(\\bullet\\,\\) Lecture Slides üöÄ",
    "text": "\\(\\bullet\\,\\) Lecture Slides üöÄ\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nLecture 3\n\n\nFebruary 3, 2025\n\n\n\n\nLecture 3\n\n\nJanuary 29, 2025\n\n\n\n\nLecture 2\n\n\nJanuary 27, 2025\n\n\n\n\nLecture 1\n\n\nJanuary 22, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-classwork",
    "href": "index.html#bullet-classwork",
    "title": "DANL 310-01: Data Visualization and Presentation, Spring 2025",
    "section": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è",
    "text": "\\(\\bullet\\,\\) Classwork ‚å®Ô∏è\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\nClasswork 4\n\n\nJanuary 29, 2025\n\n\n\n\nClasswork 3\n\n\nJanuary 27, 2025\n\n\n\n\nClasswork 2\n\n\nJanuary 27, 2025\n\n\n\n\nClasswork 1\n\n\nJanuary 22, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html#bullet-homework",
    "href": "index.html#bullet-homework",
    "title": "DANL 310-01: Data Visualization and Presentation, Spring 2025",
    "section": "\\(\\bullet\\,\\) Homework üíª",
    "text": "\\(\\bullet\\,\\) Homework üíª\n\n\n\n\n\n\nTitle\n\n\nDate\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl-cw/danl-310-cw-03.html",
    "href": "danl-cw/danl-310-cw-03.html",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd.\n\n\n\n\n\n\n\nRules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file.\n\n\n\n\n\n\n\nDecorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-310-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website.\n\n\n\n\n\n\nQuarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "danl-cw/danl-310-cw-03.html#website-files",
    "href": "danl-cw/danl-310-cw-03.html#website-files",
    "title": "Classwork 3",
    "section": "",
    "text": "_quarto.yml configures the website:\n\nIt determines the structure of the website.\n\ne.g., Navigation bar, themes, HTML options, etc.\n\nIf _quarto.yml is edited, use quarto render to render all qmd and ipynb files.\n\nindex.qmd renders index.html, the front page of the website.\n\nDo not create Quarto files something like index2.qmd within the working directory.\n\nblog-listing.qmd configures the blog listing page.\nposts directory includes sub-directories of blog posts.\nimg directory can be used to store picture files.\n\n\n\n\nA file in the working directory can have its own web address.\n\nFor example, if you have resume-example.pdf in your working directory, it has the web address, https://USERNAME.github.io/resume-example.pdf.\n\nWhen naming a file in the website, do not have any space in a file name!\nBe systematic when naming a series of files in the website.\n\nE.g., danl-399-cw-01.qmd, danl-399-cw-02.qmd, danl-399-cw-03.qmd."
  },
  {
    "objectID": "danl-cw/danl-310-cw-03.html#blogging",
    "href": "danl-cw/danl-310-cw-03.html#blogging",
    "title": "Classwork 3",
    "section": "",
    "text": "Rules\n\nOne blog post corresponds to:\n\n\nOne sub-directory in the posts directory.\nOne *.qmd file.\n\n\nPut all files for one blog post (e.g., *.qmd, *.png) in one corresponding sub-directory in the posts directory.\nWhen inserting an image file to a blog post, use a relative path, i.e., a file name of the image file."
  },
  {
    "objectID": "danl-cw/danl-310-cw-03.html#practice-problems",
    "href": "danl-cw/danl-310-cw-03.html#practice-problems",
    "title": "Classwork 3",
    "section": "",
    "text": "Decorate your website:\n\n\nReplace YOUR NAME with your name in _quarto.yml and index.qmd.\nDescribe yourself in index.qmd.\nAdd the picture (png) file of your profile photo to img directory. Then correct img/profile.png in index.qmd accordingly.\nCorrect links for your resum√©, linkedin, email, and social media.\n\n\nAdd a link of page of ‚ÄúR Basics‚Äù to the navigation bar using danl-310-quarto-r.qmd.\nUse the 3-step git commands (git add, git commit, and git push) to update your website."
  },
  {
    "objectID": "danl-cw/danl-310-cw-03.html#references",
    "href": "danl-cw/danl-310-cw-03.html#references",
    "title": "Classwork 3",
    "section": "",
    "text": "Quarto - Creating a Website\nQuarto - HTML Basics\nQuarto - HTML Code Blocks\nQuarto - HTML Theming\nQuarto - Creating a Blog"
  },
  {
    "objectID": "danl-cw/danl-310-cw-01.html",
    "href": "danl-cw/danl-310-cw-01.html",
    "title": "Classwork 1",
    "section": "",
    "text": "Getting a GitHub account\nStep 1. Create the GitHub account with your Geneseo email.\n\nGo to GitHub.\nClick ‚ÄúSign up for GitHub‚Äù.\n\n\nChoose your GitHub username carefully:\n\nhttps://USERNAME.github.io will be the address for your website.\nByeong-Hak‚Äôs GitHub username is bcdanl, so that Byeong-Hak owns the web address https://bcdanl.github.io.\n\nIt is recommended to have a username with all lower cases.\n\n\n\n\n\nInstalling git if you do not have one.\nStep 2.\n\nCheck whether git is installed in your laptop.\n\n\nFrom the Console Pane in RStudio, click Terminal tab.\n\n\n\n\n\nFrom the Terminal, run the following command to check if your laptop has git installed.\n\ngit --version\n\nIf your computer has git installed, you will see the message below and you do not need to install git:\n\ngit version 2.xx\n\nIf your computer does not have git installed, you will see the message below and you need to install git:\n\n'git' is not recognized as an internal or external command\n\n\nInstall git if you do not have one. Move to the next step if you have git installed in your laptop.\n\n\n\n\nMac\n\nGo to http://git-scm.com/downloads, and download the file.\nClick ‚ÄúmacOS‚Äù, scroll down the webpage, and then click ‚Äúinstaller‚Äù from the Binary installer section.\nRun the downloaded file.\n\n\n\n\nWindows\n\nGo to https://gitforwindows.org, and download the file.\nRun the downloaded file.\n\n\n\n\n\nKeep clicking ‚ÄúNext‚Äù to complete the installation of git.\nAfter the git installation is done, close RStudio and re-open it.\n\n\nHow to open git installation file on Mac?\n\nRun the downloaded file.\nClick Okay\nGo to ‚ÄúSetting‚Äù &gt; ‚ÄúPrivacy and Security‚Äù\nGo to ‚ÄúGeneral‚Äù or scroll down\nClick ‚ÄúOpen Anyway‚Äù\n\n\n\n\n\n\n\n\nSetting up GitHub Credential on your local Git.\nStep 3. In Terminal, run the following commands one by one:\ngit config --global user.email \"YOUR_EMAIL_ADDRESS\"\ngit config --global user.name \"YOUR_USERNAME\"\nFor example, the email address for my GitHub account is bchoe@geneseo.edu, and my GitHub username is bcdanl, so that I ran below:\ngit config --global user.email \"bchoe@geneseo.edu\"\ngit config --global user.name \"bcdanl\"\n\nStep 4. Obtain a personal access token (PAT) from GitHub.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"usethis\")\nusethis::create_github_token()\n\nThen, click ‚ÄúGenerate token‚Äù in the pop-upped web browser.\nWe can think of GitHub‚Äôs personal access token as a password that expires. You can decide how long it remains valid. My recommendation is to set its expiration for May 31, 2025, or later.\n\n\n\n\n\nThen, copy the generated PAT, and paste it to your clipboard or R script.\n\n\nStep 5. Set the GitHub credential using the PAT.\n\nIn RStudio Console, run the followings line by line:\n\ninstall.packages(\"gitcreds\")\ngitcreds::gitcreds_set()\n\nYou will be asked to provide your PAT.\nPaste your PAT to the RStudio Console, and then hit Enter.\n\n\n\n\n\n\n\nNote\n\n\n\n\nIt does not harm to create multiple PAT for one GitHub account.\nAfter the PAT expires, you should repeat the following if you want to update your GitHub website:\n\n\nCreate a new PAT:\n\nusethis::create_github_token()\n\nReplace the current PAT with the new PAT:\n\ngitcreds::gitcreds_set()\n\nSelect the option 2: Replace these credentials by typing 2 and hitting Enter on R Console.\n\n\n\n\n\n\nEstablishing the Connection between GitHub repo and your local Git\nStep 6. Login to your GitHib and make the repository.\n\nFrom https://github.com, click the plus [+] icon in the upper right corner and select ‚ÄúNew repository‚Äù.\nName this repo USERNAME.github.io, which will be the domain for your website.\n\n\ne.g., If your GitHub username is abc9, the name of your repo should be abc9.github.io, not abc_9.github.io.\n\n\nThen, copy the web address of your GitHub repo, https://github.com/USERNAME/USERNAME.github.io\n\n\nFor example, the web address for Byeong-Hak‚Äôs GitHub repo is https://github.com/bcdanl/bcdanl.github.io.\n\n\nStep 7. Create a RStudio project with Version Control\n\n\n\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúVersion Control‚Äù &gt; ‚ÄúGit‚Äù\nPaste the web address of your GitHub repo to the Repository URL menu.\nClick ‚ÄúBrowse‚Äù to select the parent directory for your local project directory (I recommend ‚ÄúDocuments‚Äù folder.)\nClick ‚ÄúCreate‚Äù\n\n\n\n\n\n\n\nNote\n\n\n\nIf Step 7 does not work on your laptop, try below Steps 7-1 and 7-2 instead. If Step 7 DOES work well, skip Steps 7-1 and 7-2.\n\n\nStep 7-1. Use git clone to establish the connection between GitHub repo and your local laptop:\n\nChange directory to ‚ÄúDocuments‚Äù in Terminal using cd command.\n\ncd &lt;pathname of \"Documents\" directory&gt;\n\nHere, you need to know the pathname of ‚ÄúDocuments‚Äù directory.\nFor example, LAPTOP_USERNAME below is not your GitHub username but one for your local laptop.\n\nMac\ncd /Users/LAPTOP_USERNAME/Documents\nWindows\ncd C:/Users/LAPTOP_USERNAME/Documents\n\nUse git clone to creates a local copy of the GitHub Repository.\n\ngit clone &lt;repository-url&gt;\n\nFor example,\n\ngit clone https://github.com/USERNAME/USERNAME.github.io\n\nStep 7-2. Create a RStudio project from Existing Directory\n\nClick ‚ÄúProject (None)‚Äù at the top-right corner in RStudio.\nClick ‚ÄúNew Project‚Äù &gt; ‚ÄúExisting Directory‚Äù\nClick ‚ÄúBrowse‚Äù to select the local copy of the GitHub Repository\nClick ‚ÄúCreate Project‚Äù\n\n\n\n\nDownloading Website Template Files\nStep 8. Download the files of website template:\n\nGo to the following webpage: https://github.com/bcdanl/danl-website-template\nFrom the webpage above, click the green icon &lt; &gt; Code, and then click ‚ÄúDownload Zip‚Äù\nExtract the Zip file you have downloaded\nIf there are the files, .gitignore, .DS_Store, or *.Rproj, in the folder, delete all of them.\nMove all the files that were compressed in the Zip file to your local project directory, USERNAME.github.io.\n\n\nSelect all the files in the danl-website-template folder (Tip: Ctrl + A (Windows) / command + A (Mac) selects all files in a directory).\nThen, Ctrl + C (Windows) / command + C (Mac) to copy them.\nThen, go to your local project directory USERNAME.github.io.\nThen, Ctrl + V (Windows) / command + V (Mac) to paste them to your local project directory USERNAME.github.io.\n\n\nRemove the danl-website-template directory from your local project directory, if you have one.\n\n\nAll the website files should be located at the same level with the R Project file (USERNAME.github.io.Rproj), shown below.\n\n\n\n\n\n\n\nPushing the Website Files to the GitHub repository\n\n\n\nStep 8. Push the files to your GitHub repository\n\nOn Terminal within RStudio, execute the following 3-step git commands, which will stage, commit, and push all the files in the local working directory to your GitHub repository:\n\n\ngit add . adds changes in your local working directory (e.g., edited files, new files, deleted files) to the staging area, which is a temporary area where you can prepare your next commit\n\ngit add .\n\ngit commit -m \"...\" records the changes in the staging area as a new snapshot in the local working directory, along with a message describing the changes.\n\ngit commit -m \"any message to describe the changes\"\n\ngit push uploads the local changes to the online repository in GitHub.\n\ngit push\n\nStep 9. Check whether the files are well uploaded.\n\nGo to the webpages of your GitHub repository and your website:\n\nhttps://github.com/USERNAME/USERNAME.github.io.git\nhttps://USERNAME.github.io\nRefresh the webpages (Ctrl + R for Windows users; cmd + R for Mac users)\n\nAdd a URL for your website (https://YOUR_GITHUB_USERNAME.github.io/) in About section in your GihtHub repository webpage by clicking the setting. Below describes how to do it:\n\n\n\n\nDiscussion\nWelcome to our Classwork 1 Discussion Board! üëã \nThis space is designed for you to engage with your classmates about the material covered in Classwork 1.\nWhether you are looking to delve deeper into the content, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions for Byeong-Hak (@bcdanl) regarding the Classwork 1 materials or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\n\n\n\n\n Back to top"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html",
    "href": "posts/beer-markets/beer-markets.html",
    "title": "Beer Markets",
    "section": "",
    "text": "Diving into the complex world of what people like in their beer, the beer_markets.csv dataset comes across as a goldmine of data, showing us the detailed interactions between buyers and their favorite beers. This dataset covers everything from how much and at what price people are buying beer to how deals and brand loyalty influence their decisions, across different types of people and places. As we start digging into this dataset, we aim to uncover the patterns that show what really influences the modern beer drinker‚Äôs choices, offering up valuable insights for marketers, industry watchers, and beer lovers. By breaking down the data, our exploration will shine a light on the factors that drive consumer behavior in the beer market, giving us a full picture of the trends that shape this lively industry.\nCode\n# Creating an interactive table\n!pip install itables\nfrom itables import init_notebook_mode\nfrom itables import show\nCode\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n# Reading the CSV file\nbeer_data = pd.read_csv(\"https://bcdanl.github.io/data/beer_markets.csv\")\nshow(beer_data)\n\n\n\n\n\n\n\n    \n      \n      hh\n      _purchase_desc\n      quantity\n      brand\n      dollar_spent\n      beer_floz\n      price_per_floz\n      container\n      promo\n      market\n      buyertype\n      income\n      childrenUnder6\n      children6to17\n      age\n      employment\n      degree\n      cow\n      race\n      microwave\n      dishwasher\n      tvcable\n      singlefamilyhome\n      npeople\n    \n  Loading... (need help?)\nCode\n# Setting up the visualization settings\nsns.set(style=\"whitegrid\")\n\n# Calculate total quantity and spending for each brand\nbrand_summary = beer_data.groupby('brand').agg({'quantity':'sum', 'dollar_spent':'sum'}).reset_index()\n\n# Sort by total quantity and spending\nbrand_summary_sorted_quantity = brand_summary.sort_values('quantity', ascending=False)\nbrand_summary_sorted_spent = brand_summary.sort_values('dollar_spent', ascending=False)\nCode\n# Plotting total quantity for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='quantity', y='brand', data=brand_summary_sorted_quantity, palette='viridis')\nplt.title('Total Quantity of Beer Purchased by Brand')\nplt.xlabel('Total Quantity')\nplt.ylabel('Brand')\nplt.show()\nThe bar charts above display the total quantity of beer purchased and the total spending by brand. From the looks of it, certain brands dominate in terms of quantity sold and total spending, indicating their popularity.\nNow, let‚Äôs calculate the average quantity purchased and average spending per purchase. For this, we‚Äôll consider each row in the dataset as a separate purchase and compute the averages accordingly.\nCode\n# Calculate average quantity purchased and average spending per purchase\naverage_purchase = beer_data.groupby('brand').agg({\n    'quantity': 'mean',\n    'dollar_spent': 'mean'\n}).reset_index()\n\n# Sort by average quantity and average spending\naverage_purchase_sorted_quantity = average_purchase.sort_values('quantity', ascending=False)\naverage_purchase_sorted_spent = average_purchase.sort_values('dollar_spent', ascending=False)\n\n# Plotting average quantity for each brand\nplt.figure(figsize=(10, 8))\nsns.barplot(x='quantity', y='brand', data=average_purchase_sorted_quantity, palette='viridis')\nplt.title('Average Quantity of Beer Purchased by Brand')\nplt.xlabel('Average Quantity')\nplt.ylabel('Brand')\nplt.show()\nThe visualizations above depict the average quantity of beer purchased per brand and the average spending per brand. This shows which brands tend to be bought in larger quantities on average and which brands tend to have higher spending per purchase, which could be indicative of their price point or the purchase of premium products.\nNext, we‚Äôll look at the total spending across different markets to see if there are any notable differences in spending habits geographically. To do this, we‚Äôll sum up the spending in each market and visualize it.\nCode\n# Calculate total spending in each market\nmarket_spending_summary = beer_data.groupby('market').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nmarket_spending_summary_sorted = market_spending_summary.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending in each market\nplt.figure(figsize=(12, 18))\nsns.barplot(x='dollar_spent', y='market', data=market_spending_summary_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Market')\nplt.xlabel('Total Spending')\nplt.ylabel('Market')\nplt.show()\nThe bar chart illustrates the total spending on beer by market, showcasing the differences in spending habits across various regions. Some markets have significantly higher spending, which could be due to a variety of factors including market size, consumer preferences, or economic factors.\nNow, let‚Äôs move on to the second analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "href": "posts/beer-markets/beer-markets.html#demographic-analysis",
    "title": "Beer Markets",
    "section": "Demographic Analysis",
    "text": "Demographic Analysis\nWe will examine which demographics are buying what kind of beer and whether spending habits vary by demographics such as age, employment, and race. For this, we could look at:\n\nSpending by age group\nSpending by employment status\nSpending by race\n\nI‚Äôll start by analyzing spending by age group.\n\n\nCode\n# Calculate total spending by age group\nage_group_spending = beer_data.groupby('age').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nage_group_spending_sorted = age_group_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by age group\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='age', data=age_group_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Age Group')\nplt.xlabel('Total Spending')\nplt.ylabel('Age Group')\nplt.show()\n\n\n\n\n\nThe bar chart demonstrates the total spending on beer segmented by age group, highlighting which age groups spend the most on beer. It appears that certain age groups are more dominant in beer spending, which may align with the purchasing power or preferences of those groups.\nNext, we will examine spending by employment status.\n\n\nCode\n# Calculate total spending by employment status\nemployment_spending = beer_data.groupby('employment').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nemployment_spending_sorted = employment_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by employment status\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='employment', data=employment_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Employment Status')\nplt.xlabel('Total Spending')\nplt.ylabel('Employment Status')\nplt.show()\n\n\n\n\n\nThe visualization shows the total spending on beer by employment status. We can see that certain employment groups, such as full-time workers, are spending more on beer, which might be related to their disposable income.\nFinally, let‚Äôs look at spending by race to complete the demographic analysis.\n\n\nCode\n# Calculate total spending by race\nrace_spending = beer_data.groupby('race').agg({'dollar_spent':'sum'}).reset_index()\n\n# Sort by total spending\nrace_spending_sorted = race_spending.sort_values('dollar_spent', ascending=False)\n\n# Plotting total spending by race\nplt.figure(figsize=(10, 6))\nsns.barplot(x='dollar_spent', y='race', data=race_spending_sorted, palette='viridis')\nplt.title('Total Spending on Beer by Race')\nplt.xlabel('Total Spending')\nplt.ylabel('Race')\nplt.show()\n\n\n\n\n\nThe bar chart above indicates the total spending on beer broken down by race, highlighting which racial groups account for the most beer spending within the dataset. This could reflect both the demographics of the regions where the data was collected and cultural preferences regarding beer.\nNow, let‚Äôs proceed to the third analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "href": "posts/beer-markets/beer-markets.html#price-sensitivity",
    "title": "Beer Markets",
    "section": "Price Sensitivity",
    "text": "Price Sensitivity\nWe‚Äôll look at the price per fluid ounce and see if there are any trends or correlations with the quantity purchased or the brand popularity. To do this, we‚Äôll visualize how the price is sensitive to the quantity purchased by brand.\n\n\nCode\n# Ensure there's no entries with 0 for 'price_per_floz' or 'quantity' to avoid log(0) issues\nfiltered_data = beer_data[(beer_data['price_per_floz'] &gt; 0) & (beer_data['quantity'] &gt; 0)]\n\n# Calculate log values for both 'price_per_floz' and 'quantity'\nfiltered_data['log_price_per_floz'] = np.log(filtered_data['price_per_floz'])\nfiltered_data['log_quantity'] = np.log(filtered_data['quantity'])\n\n# Use seaborn to create a scatterplot with fitted lines, facetted by 'brand'\ng = sns.lmplot(data=filtered_data, x='log_quantity', y='log_price_per_floz', col='brand', col_wrap=4, height=3, line_kws={'color': 'red'}, scatter_kws={'alpha':0.5}, aspect = .75)\n\n# Adjusting plot aesthetics\ng.set_titles(\"{col_name}\")\ng.set_axis_labels(\"Log of Quantity\", \"Log of Price per Floz\")\nplt.subplots_adjust(top=0.9)\ng.fig.suptitle('Log of Price per Floz vs. Log of Quantity')\n\nplt.show()\n\n\n\n\n\nHere‚Äôs the scatterplot with fitted straight lines for the log of price_per_floz versus the log of quantity, facetted by brands. Each subplot represents a different brand, showing the relationship between these two logarithmic variables along with a fitted line to illustrate the trend within each brand‚Äôs data.\n\n\nCode\n# Adjust the facetting to split rows by 'brand' and columns by 'promo' for a more detailed comparative analysis\ng = sns.lmplot(data=filtered_data, x='log_quantity', y='log_price_per_floz', row='brand', col='promo', height=3, aspect=.75, line_kws={'color': 'red'}, scatter_kws={'alpha':0.5})\n\n# Adjusting plot aesthetics\ng.set_titles(\"Brand: {row_name}\\n Promo: {col_name}\")\ng.set_axis_labels(\"Log of Quantity\", \"Log of Price per Floz\")\nplt.subplots_adjust(top=0.9, wspace = .4, hspace = .4)\ng.fig.suptitle('Log of Price per Floz vs. Log of Quantity')\n\nplt.show()\n\n\n\n\n\nThe scatterplot has been reorganized to split rows by brand and columns by promo status, offering a comprehensive view across different brands and their promotional status. Each subplot now provides a clear comparison of the log of price_per_floz versus the log of quantity for purchases made on promotion versus those that were not, across various beer brands.\nThis layout facilitates an easier comparison across brands and how promotion impacts the relationship between quantity and price per fluid ounce within each brand.\nLastly, let‚Äôs move to the fourth analysis:"
  },
  {
    "objectID": "posts/beer-markets/beer-markets.html#promotional-impact-on-quantity-purchased",
    "href": "posts/beer-markets/beer-markets.html#promotional-impact-on-quantity-purchased",
    "title": "Beer Markets",
    "section": "Promotional Impact on Quantity Purchased",
    "text": "Promotional Impact on Quantity Purchased\nWe‚Äôll assess the impact of promotions on the quantity of beer purchased. For this analysis, we can calculate the average quantity purchased with and without promotions and visualize the difference. We‚Äôll do this for each brand to see which brands are most affected by promotions.\nLet‚Äôs begin this analysis by looking at the average quantity purchased with and without promotions for each brand.\n\n\nCode\n# Calculate average quantity purchased with and without promotions for each brand\npromo_impact = beer_data.groupby(['brand', 'promo']).agg({'quantity':'mean'}).reset_index()\n\n# Pivot the data to have promo and non-promo side by side for each brand\npromo_impact_pivot = promo_impact.pivot(index='brand', columns='promo', values='quantity').reset_index()\npromo_impact_pivot.columns = ['brand', 'non_promo', 'promo']\n\n# Calculate the difference in average quantity purchased between promo and non-promo\npromo_impact_pivot['promo_impact'] = promo_impact_pivot['promo'] - promo_impact_pivot['non_promo']\n\n# Sort by the impact of promo\npromo_impact_pivot_sorted = promo_impact_pivot.sort_values('promo_impact', ascending=False)\n\n# Plotting the difference in average quantity purchased between promo and non-promo for each brand\nplt.figure(figsize=(12, 10))\nsns.barplot(x='promo_impact', y='brand', data=promo_impact_pivot_sorted, palette='viridis')\nplt.title('Impact of Promotions on Average Quantity Purchased by Brand')\nplt.xlabel('Difference in Average Quantity Purchased (Promo - Non-Promo)')\nplt.ylabel('Brand')\nplt.show()\n\n\n\n\n\nThe bar chart illustrates the impact of promotions on the average quantity of beer purchased by brand. A positive value indicates that, on average, more beer is purchased when there is a promotion compared to when there isn‚Äôt. Some brands appear to be significantly more influenced by promotions, with customers buying more when the products are on sale or promotion.\nThis comprehensive analysis has provided insights into purchase patterns, demographic preferences, price sensitivity, and the impact of promotions on beer purchases."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\n\n\n\n Back to top"
  },
  {
    "objectID": "listing-danl-310-lec.html",
    "href": "listing-danl-310-lec.html",
    "title": "DANL 310 - Lecture",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nLecture 1\n\n\nSyllabus, Course Outline, and Introduction\n\n\nJanuary 22, 2025\n\n\n\n\nLecture 2\n\n\nGetting Started with Quarto\n\n\nJanuary 27, 2025\n\n\n\n\nLecture 3\n\n\nggplot basics\n\n\nJanuary 29, 2025\n\n\n\n\nLecture 3\n\n\nMake a plot with ggplot\n\n\nFebruary 3, 2025\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nUse theme() if you want to tweak the display of an existing theme.\nThe following lists basic ggplot themes:\n\n\n\n\ntheme\ntheme\n\n\n\n\ntheme_grey()\ntheme_gray()\n\n\ntheme_bw()\ntheme_linedraw()\n\n\ntheme_light()\ntheme_dark()\n\n\ntheme_minimal()\ntheme_classic()\n\n\ntheme_void()\ntheme_test()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-1",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nggthemes package provides the following themes:\n\ntheme_economist(), theme_wsj(), theme_fivethirtyeight(), theme_gdocs(), theme_map()\n\nhrbrthemes package provides the following themes:\n\ntheme_ipsum(), theme_ipsum_rc(), theme_ft_rc(), and more."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-2",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\ngapminder data\n\nThe gapminder package include the gapminder data frame.\n\nlibrary(gapminder)\ngapminder\nskim(gapminder)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-3",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMappings link data to things we see\n\n\nFirst, we tell the core ggplot function what our data is and what our aesthetic mapping is:\n\np &lt;- ggplot(data = gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\nWe can then add the geometric object (geom_*()) to the ggplot().\n\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-4",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\n\nTell the ggplot() function what our tidy data is.\n\n\nggplot(data = ...)\n\n\nTell ggplot() what relationships we want to see.\n\n\nThe ggplot(mapping = aes(...))\np &lt;- ggplot(data = ... , aes(...))\n\n\nTell ggplot() how we want to see the relationships in our data.\n\n\nChoose a geom_*().\n\n\nLayer on geoms as needed, by adding them to the p object one at a time.\nUse additional functions to adjust scales, labels, tick marks, titles, etc."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-5",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nBuild your plots layer by layer\np + geom_point() + geom_smooth() \np + geom_point() + geom_smooth(method = \"lm\") \np + geom_point() +\n    geom_smooth(method = \"lm\")\np + geom_point() +\n    geom_smooth(method = \"gam\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-6",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nIn the following, we map color to continent in the aes() function:\n\np1 &lt;-  ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\nWe then add geoms.\n\np1 + geom_point() +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-7",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nIn the following, we map color to \"purple\" outside of the aes() function:\n\np2 &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap, y = lifeExp))\n\nWe then add geoms, manually set aethetics, and then adjust scales.\n\np2 + geom_point(color = \"purple\") +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-8",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-8",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nHere are another exmaples that set aesthetic mapping manually outside aes() function and inside geom_*() function.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\np + geom_point(color = \"purple\") +\n    geom_smooth(method = \"loess\") \n\np + geom_point(alpha = 0.3) +\n    geom_smooth(color = \"orange\", se = F, size = 8, method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-9",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-9",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nLet‚Äôs add scale_*() and labs() functions to ggplot()\n\np + geom_point(alpha = 0.3) +\n    geom_smooth(method = \"gam\") +\n    scale_x_log10(labels = scales::dollar) +\n    labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\nQ. Is it really the best way to display this country-year data?\n\nWhat are we gaining and losing by ignoring the temporal and country-level structure of the data? How could we do better?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-10",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-10",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nAesthetics can be mapped per geom\n\nWe can have different aesthetic mappings across different geoms:\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, y = lifeExp))\n\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")  +\n    scale_x_continuous(trans = scales::log_trans())  # natural log"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-11",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-11",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can use ggsave() to save ggplot output as a .png or .pdf file.\n\nggsave(filename = \"my_figure.png\")\n\nWe can put our recent plot into an object called p_out and then tell ggave() that we want to save that object.\n\np_out &lt;- p + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()\nggsave(\"my_figure.pdf\", plot = p_out)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-12",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-12",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can set the size of ggplot figue:\n\nggsave(\"lifexp_vs_gdp_gradient.pdf\",\n       plot = p_out, height = 8, width = 10, units = \"in\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-13",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-13",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens when you put the geom_smooth() function before geom_point() instead of after it?\n\nWhat does this tell you about how the plot is drawn? Think about how this might be useful when drawing plots."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-14",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-14",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nChange the mappings in the aes() function so that you plot Life Expectancy against population (pop) rather than per capita GDP.\n\nWhat does that look like?\nWhat does it tell you about the unit of observation in the dataset?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-15",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#make-a-plot-15",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens if you map color to year instead of continent?\n\nIs the result what you expected?\nThink about what class of object year is.\nRemember you can get a quick look at the top of the data, which includes some shorthand information on the class of each variable, by typing gapminder.\nInstead of mapping color = year, what happens if you try color = factor(year)?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-1",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line() \n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-2",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-3",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped.\n\nHow about color aesthetic, instead of group?\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-4",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-5",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\np + geom_line(color=\"gray70\", aes(group = country)) +\n    geom_smooth(size = 1.1, method = \"loess\", se = FALSE) +\n    facet_[?] +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = element_text(angle = 45),\n          axis.title.x = element_text(margin = margin(t = 25))) +\n    labs(x = \"Year\", y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-6",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\ninstall.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nglimpse(gss_sm)\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-7",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + [?](alpha = 0.2) +\n    [?]()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-8",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-8",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    [?]"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-9",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-9",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\ne.g., the relationship between the age and the number of children by sex and race\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-10",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-10",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-11",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-11",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-12",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-12",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this: &lt;mapping&gt; = &lt;..statistic..&gt;.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-13",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-13",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead.\n\nTo do so we specify group = 1 inside the aes() call.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop.., group = 1))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-14",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-14",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ntable(gss_sm$religion)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-15",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-15",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, color = religion))\np + geom_bar()\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-16",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-16",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, fill = religion))\np + geom_bar() + guides( fill = \"none\" )\n\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-17",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-17",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"fill\")\n\nAn alternative choice is to set the position argument to \"fill\".\n\nIt is to compare proportions across groups."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-18",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-18",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-19",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-19",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = religion))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-20",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-20",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = bigregion)) +\n    facet_wrap(~ bigregion, ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-21",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-21",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-22",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-22",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-23",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#show-the-right-number-23",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#instructor-1",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#instructor-1",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nCurrent Appointment & Education\n\nName: Byeong-Hak Choe.\nAssistant Professor of Data Analytics and Economics, School of Business at SUNY Geneseo.\nPh.D.¬†in Economics from University of Wyoming.\nM.S. in Economics from Arizona State University.\nM.A.¬†in Economics from SUNY Stony Brook.\nB.A. in Economics & B.S. in Applied Mathematics from Hanyang University at Ansan, South Korea.\n\nMinor in Business Administration.\nConcentration in Finance."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#instructor-2",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#instructor-2",
    "title": "Lecture 1",
    "section": "Instructor",
    "text": "Instructor\nEconomics and Data Science\n\nChoe, B.H., Newbold, S. and James, A., ‚ÄúEstimating the Value of Statistical Life through Big Data‚Äù\n\nQuestion: How much is the society willing to pay to reduce the likelihood of fatality?\n\nChoe, B.H., ‚ÄúSocial Media Campaigns, Lobbying and Legislation: Evidence from #climatechange and Energy Lobbies.‚Äù\n\nQuestion: To what extent do social media campaigns compete with fossil fuel lobbying on climate change legislation?\n\nChoe, B.H. and Ore-Monago, T., 2024. ‚ÄúGovernance and Climate Finance in the Developing World‚Äù\n\nQuestion: In what ways and through what forms does poor governance act as a significant barrier to reducing greenhouse gas emissions in developing countries?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-1",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-1",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nEmail, Class & Office Hours\n\nEmail: bchoe@geneseo.edu\nClass Homepage:\n\nhttps://brightspace.geneseo.edu/\nhttp://bcdanl.github.io/210/\n\nOffice: South Hall 227B\nOffice Hours:\n\nMondays 5:00 P.M. ‚Äì 6:30 P.M.\n\nWednesdays 5:00 P.M. ‚Äì 6:30 P.M."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-2",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-2",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Description\n\nThis course delves into the tools and methodologies essential for creating visually engaging and informative data representations. Its focus is on enhancing data comprehension and facilitating effective data analytics through aesthetically pleasing graphics. The curriculum includes:\nKey topics include:\n\nExploring a variety of graph types, including line graphs, scatter plots, and bar charts.\nPreparing and organizing data from diverse sources for visualization.\nTailoring graphics with a range of formats and styles, such as color schemes, fonts, and line types.\nMapping geographical data effectively.\nCreating dynamic and interactive visualizations.\nBuilding and deploying web applications using Shiny for data visualization.\nUtilizing Shiny dashboard to synthesize information and narrate data stories.\n\nThese areas will be explored through detailed, real-world examples to address common data analysis challenges.\nThroughout the course, practical experience is emphasized, with hands-on projects using tools like R, Python, RStudio, Quarto, Jupyter Notebook, Shiny, Git, and GitHub."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-3",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-3",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nRequired Materials\n\nData Visualization: A Practical Introduction by Kieran Healy\n\nA free online version of this book is available."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-4",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-4",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - R\n\nR for Data Science (1ed)\nR for Data Science (2ed)\nFundamentals of Data Visualization\nR Graphics Cookbook: Practical Recipes for Visualizing Data\nggplot2: elegant graphics for data analysis"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-5",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-5",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Python\n\nPython for Data Analysis (3rd Edition) by Wes McKinney\nIPython Interactive Computing and Visualization Cookbook\nPython Programming for Data Science by Tomas Beuzen\nCoding for Economists by Arthur Turrell\nPython for Econometrics in Economics by Fabian H. C. Raters\nQuantEcon DataScience - Python Fundamentals by Chase Coleman, Spencer Lyon, and Jesse Perla\nQuantEcon DataScience - pandas by Chase Coleman, Spencer Lyon, and Jesse Perla"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-6",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-6",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nReference Materials - Website\n\nGuide for Quarto"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-7",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-7",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Requirements\n\nLaptop: You should bring your own laptop (Mac or Windows) to the classroom.\n\nThe minimum specification for your laptop in this course is 2+ core CPU, 4+ GB RAM, and 500+ GB disk storage.\n\nHomework: There will be six homework assignments.\nProject: There will be one project presentation and a write-up on a personal website.\nExams: There will be one Midterm Exam.\nDiscussions: You are encouraged to participate in GitHub-based online discussions and class discussion, and office hours.\n\nCheckout the netiquette policy in the syllabus."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-8",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-8",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nPersonal Website\n\nYou will create your own website using Quarto, R Studio, and Git.\nYou will publish your homework assignments and team project on your website.\nYour website will be hosted in GitHub.\nThe basics in Markdown will be discussed.\nReferences:\n\nQuarto Guide"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-9",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-9",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nWhy Personal Website?\n\n\nHere are the example websites:\n\nByeong-Hak‚Äôs Website\nDANL Website Template\n\nProfessional Showcase: Display skills and projects\nVisibility and Networking: Increase online presence\nContent Sharing and Engagement: Publish articles, insights\nJob Opportunities: Attract potential employers and clients\nLong-term Asset: A growing repository of your career journey"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-10",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-10",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nTeam Project\n\nTeam formation is scheduled for late March.\n\nEach team must have one to two students.\n\nFor the team project, a team must choose data related to business or socioeconomic issues.\nThe project report should include exploratory data analysis using summary statistics, visual representations, and data wrangling.\nThe document for the team project must be published in each member‚Äôs website.\nThe project for the team project must include a Shiny dashboard.\nAny changes to team composition require approval from Byeong-Hak Choe."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-11",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-11",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nClass Schedule and Exams\n\nThere will be tentatively 28 class sessions.\nThe Midterm Exam is scheduled on March 31, 2025, Wednesday, during the class time.\nThe Project Presentation is scheduled on May 9, 2025, Friday, 3:30 P.M.-5:30 P.M.\nThe due for the Project write-up is May 16, 2024, Friday."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-12",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-12",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe first half of the course covers fundamentals of data visualization:"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-13",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-13",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nCourse Contents\n\nThe second half of the course covers advanced data visualization and Shiny apps:"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-14",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-14",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\\[\n\\begin{align}\n(\\text{Total Percentage Grade}) =&\\quad\\;\\, 0.05\\times(\\text{Total Attendance Score})\\notag\\\\\n&\\,+\\, 0.05\\times(\\text{Total Participation Score})\\notag\\\\\n&\\,+\\, 0.10\\times(\\text{Website Score})\\notag\\\\\n&\\,+\\, 0.30\\times(\\text{Total Homework Score})\\notag\\\\\n&\\,+\\, 0.50\\times(\\text{Total Exam and Project Score}).\\notag\n\\end{align}\n\\]"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-15",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-15",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nGrading\n\nYou are allowed up to 2 absences without penalty.\n\nSend me an email if you have standard excused reasons (illness, family emergency, transportation problems, etc.).\n\nFor each absence beyond the initial two, there will be a deduction of 1% from the Total Percentage Grade.\nParticipation will be evaluated by quantity and quality of GitHub-based online discussions and in-person discussion.\nThe single lowest homework score will be dropped when calculating the total homework score."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-16",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#syllabus-16",
    "title": "Lecture 1",
    "section": "Syllabus",
    "text": "Syllabus\nMake-up Policy\n\nMake-up exams will not be given unless you have either a medically verified excuse or an absence excused by the University.\nIf you cannot take exams because of religious obligations, notify me by email at least two weeks in advance so that an alternative exam time may be set.\nA missed exam without an excused absence earns a grade of zero.\nLate submissions for homework assignment will be accepted with a penalty.\nA zero will be recorded for a missed assignment."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-1",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-1",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR programming\n\nThe R language is available as a free download from the R Project website at:\n\nWindows: https://cran.r-project.org/bin/windows/base/\nMac: https://cran.r-project.org/bin/macosx/\nDownload the file of R that corresponds to your Mac OS (Big Sur, Apple silicon arm64, High Sierra, El Capitan, Mavericks, etc.)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-2",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-2",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Studio\n\nThe RStudio Desktop is available as a free download from the following webpage:\n\nhttps://www.rstudio.com/products/rstudio/download/#download\n\n\n\n\n\nFor Mac users, try the following steps:\n\nRun RStudio-*.dmg file.\nFrom the Pop-up menu, click the RStudio icon.\nWhile clicking the RStudio icon, drag it to the Applications directory."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-3",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-3",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nScript Pane is where you write R commands in a script file that you can save.\n\nAn R script is simply a text file containing R commands.\nRStudio will color-code different elements of your code to make it easier to read.\n\n\n\n\n\n\n\nTo open an R script,\n\nFile \\(&gt;\\) New File \\(&gt;\\) R Script\n\n\n\n\nTo save the R script,\n\nFile \\(&gt;\\) Save"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-4",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-4",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nConsole Pane allows you to interact directly with the R interpreter and type commands where R will immediately execute them."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-5",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-5",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nEnvironment Pane is where you can see the values of variables, data frames, and other objects that are currently stored in memory.\nType below in the Console Pane, and then hit Enter:\n\na &lt;- 1"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-6",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-6",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Environment\n\n\n\n\n\nPlots Pane contains any graphics that you generate from your R code."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-7",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-7",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nR Packages and tidyverse\n\nR packages are collections of R functions, compiled code, and data that are combined in a structured format.\nThe tidyverse is a collection of R packages designed for data science that share an underlying design philosophy, grammar, and data structures.\n\nThe tidyverse packages work harmoniously together to make data manipulation, exploration, and visualization more.\nWe will use several R packages from tidyverse throughout the course. (e.g., ggplot2, dplyr, tidyr)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-8",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-8",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nInstalling R packages with install.packages(\"packageName\")\n\nR packages can be easily installed from within R using functions install.packages(\"packageName\").\n\nTo install the R package tidyverse, type and run the following from R console:\n\n\ninstall.packages(\"tidyverse\")\n\nWhile running the above codes, you may encounter the question below from the R Console:\n\n\n\n\nMac: ‚ÄúDo you want to install from sources the packages which need compilation?‚Äù from Console Pane.\n\n\n\nWindows: ‚ÄúWould you like to use a personal library instead?‚Äù from Pop-up message.\n\n\n\n\nType no in the R Console, and then hit Enter."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-9",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-9",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nLoading R packages with library(packageName)\n\nOnce installed, a package is loaded into an R session using library(packageName) so that its functions and data can be used.\n\nTo load the R package tidyverse, type and run the following command from a R script:\n\n\nlibrary(tidyverse)\ndf_mpg &lt;- mpg\n\nmpg is the data.frame provided by the R package ggplot2, one of the R pakcages in tidyverse."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-10",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-10",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nRStudio Options Setting\n\n\n\n\n\nThis option menu is found by menus as follows:\n\nTools \\(&gt;\\) Global Options\n\nCheck the boxes as in the left.\nChoose the option Never for  Save workspace to .RData on exit:"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#rstudio-workflow",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#rstudio-workflow",
    "title": "Lecture 1",
    "section": "RStudio Workflow",
    "text": "RStudio Workflow\nShortcuts for RStudio and RScript\n\n\nMac\n\ncommand + shift + N opens a new RScript.\ncommand + return runs a current line or selected lines.\ncommand + shift + C is the shortcut for # (commenting).\noption + -  is the shortcut for &lt;-.\n\n\nWindows\n\nCtrl + Shift + N opens a new RScript.\nCtrl + return runs a current line or selected lines.\nCtrl + Shift + C is the shortcut for # (commenting).\nAlt + -  is the shortcut for &lt;-."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#workflow",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#workflow",
    "title": "Lecture 1",
    "section": "Workflow",
    "text": "Workflow\nShortcuts for Lecture Slides\n\no or Esc overviews lecture slides\n\nUse arrow keys to move around.\n\nYou can also click the menu button at the top-right corner, and go to a specific slide.\nCtrl + Shift + F to search."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-11",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-11",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nAnaconda\n\nTo install Anaconda, go to the following download page:\n\nhttps://www.anaconda.com/products/distribution.\nClick the ‚ÄúDownload‚Äù button."
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-12",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#installing-the-tools-12",
    "title": "Lecture 1",
    "section": "Installing the Tools",
    "text": "Installing the Tools\nPython in RStudio\n::: {.panel-tabset} ## Python Option\n\nWe can run Python codes within RStudio.\nSelect Python interpreter in RStudio from Tools \\(&gt;\\) Global Options \\(&gt;\\) Python:"
  },
  {
    "objectID": "danl-lec/danl-310-lec-01-2025-0122.html#r-package-reticulate",
    "href": "danl-lec/danl-310-lec-01-2025-0122.html#r-package-reticulate",
    "title": "Lecture 1",
    "section": "R package, reticulate",
    "text": "R package, reticulate\n\nInstall the R package, reticulate\n\ninstall.packages(\"reticulate\")\n\nThis package allows Quarto to use Python and R objects interactively within one Quarto document."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#building-a-personal-website-on-github",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#building-a-personal-website-on-github",
    "title": "Lecture 2",
    "section": "Building a Personal Website on GitHub",
    "text": "Building a Personal Website on GitHub\n\nFollow steps described in Classwork 1."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#lets-practice-markdown",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#lets-practice-markdown",
    "title": "Lecture 2",
    "section": "Let‚Äôs Practice Markdown!",
    "text": "Let‚Äôs Practice Markdown!\n\nQuarto, Jupyter Notebook, and GitHub-based Discussion Boards use markdown as its underlying document syntax.\nLet‚Äôs do Classwork 2."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-1",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-1",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nYAML\n\n\n\n\n\n\nAn YAML (yet another markup language) header surrounded by ---.\n\nIt is commonly used for document configuration (e.g., title, author, date, style, ‚Ä¶).\n\nChunks of Python/R code surrounded by three backticks, \\(\\text{```}\\)."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-2",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-2",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nKnitting / Rendering\n\n\nWhen we knit the document, Quarto sends the .qmd file to jupyter/knitr, which executes all of the code chunks and creates a new markdown (.md) document which includes the code and its output.\nThe markdown file (*.md) generated by jupyter/knitr is then processed by pandoc, which is responsible for creating the output file."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-3",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-3",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nMarkdown, Quarto, and HTML\n\nThe very original version of Markdown was invented mainly to write HTML content more easily.\n\nFor example, - SOME_TEXT in ‚Äú.md‚Äù is equivalent to &lt;ul&gt;&lt;li&gt; SOME_TEXT &lt;/li&gt; in ‚Äù.html‚Äù\n\nPandoc makes it possible to convert a Markdown document to a large variety of output formats, such as HTML."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-and-html",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-and-html",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto and HTML",
    "text": "Getting Started with Quarto and HTML\nMarkdown, Quarto, and HTML\n---\ntitle: \"Habits\"\nauthor: YOUR_NAME\ndate: January 27, 2025\nformat: \n  html\n---\n\nTo create an HTML document from Quarto, we specify the html output format in the YAML metadata of our document.\n\nBy default, format: html is set.\n\nIn RStudio, we can create a new Quarto file from the menu, File -&gt; New File -&gt; Quarto Document.\nOpen an empty Quarto file.\n\nType the above YAML metadata to the empty Quarto file."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-4",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#getting-started-with-quarto-4",
    "title": "Lecture 2",
    "section": "Getting Started with Quarto",
    "text": "Getting Started with Quarto\nQuarto Basics\n\n\n---\ntitle: \nsubtitle: \nauthor: \ndate: last-modified\n\nformat: \n  html:\n  \nexecute: \n  echo: true\n  eval: true\n---\n\n\nDownload the Quarto file, danl-310-quarto-r.qmd from Brightspace, and open it from RStudio.\nThis syntax is part of YAML metadata in danl-310-quarto-r.qmd.\n\nIn YAML, indentation really matters!\ntab (or four spaces) defines a level in YAML."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\n\n\n---\nproject:\n  type: website\n\nwebsite:\n  title: \"YOUR NAME\"\n  navbar:\n    left:\n      - text: Project\n        href: project.qmd\n      - text: Blog\n        href: blog-listing.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: false\n---\n\nThe _quarto.yml file configures the website settings.\nIndentation matters!\n\n\n\n\nIn RStudio, open the project USERNAME.github.io.Rporj.\n\nClick Project: (None) at the top-right corner.\nClick USERNAME.github.io.Rporj.\n\n_quarto.yml configures a website, and provides various options for HTML documents within the website."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-1",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-1",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nCustom CSS\n\nCascading Style Sheets (CSS) is used to format the layout of a webpage (color, font, text size, background, display, etc.).\n\nHTML will format the architecture of the house.\nCSS will be the carpet and walls to decorate the house.\nJavaScript adds interactive elements in the house, such as opening doors and lighting.\n\nWe are not front-end web developers.\n\nWe will not cover the use of CSS and JavaScript."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-2",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-2",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nRendering\n\n\nThe Render button (command/Ctrl + shift + K) renders a single Quarto file.\nquarto render from Terminal renders all Quarto/Jupyter Notebook files in your local working directory:\n\nquarto render\n\nWe should use quarto render when we have changes in _quarto.yml.\n\n\n\nEdit _quarto.yml and *.qmd only from your local laptop.\n\nDo not make any change in those files from the GitHub repo webpage."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-3",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-3",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAppearance and Style\n\ntheme specifies the Bootstrap theme to use for the page (themes are drawn from the Bootswatch theme library).\n\nValid themes include default, bootstrap, cerulean, cosmo, darkly, flatly, journal, lumen, paper, readable, sandstone, simplex, spacelab, united, and yeti.\n\nhighlight-style specifies the code highlighting style.\n\nSupported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, and textmate."
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-4",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-4",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nAbout\n\nYour index.qmd sets a page about you.\n\nDetails in about pages are available here:\nhttps://quarto.org/docs/websites/website-about.html.\n\nQuarto includes 5 built-in templates:\n\njolla\ntrestles\nsolana\nmarquee\nbroadside"
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-5",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-5",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nIcons and Emojis\n\nA ton of Bootstrap icons are available here:\n\nhttps://icons.getbootstrap.com.\n\nA ton of markdown emojis are available here üòÑ:\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\nhttps://gist.github.com/rxaviers/7360908"
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-6",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-6",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\nleft:\n- text: Project\n  href: project.qmd\n- text: Blog\n  href: blog-listing.qmd\n- text: Homeowrk\n  href: hw.qmd\n\nWe can add a new page to the website through navbar in _quarto.yml"
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-7",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-7",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nNaviation and Adding Pages\nleft:\n  - text: \"Projects\"\n    menu:\n      - project_1.qmd\n      - project_2.qmd \n\nWe can also create a navigation bar menu by including a menu\nMore details about navbar are available here:\n\nhttps://quarto.org/docs/websites/website-navigation.html"
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-8",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-websites-8",
    "title": "Lecture 2",
    "section": "Quarto Websites",
    "text": "Quarto Websites\nColors\n\nA ton of hex codes for colors are available here:\n\nhttps://www.color-hex.com"
  },
  {
    "objectID": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-website-basics",
    "href": "danl-lec/danl-310-lec-02-2025-0127.html#quarto-website-basics",
    "title": "Lecture 2",
    "section": "Quarto Website Basics",
    "text": "Quarto Website Basics\n\nLet‚Äôs do Classwork 3."
  },
  {
    "objectID": "posts/nba/nba.html#salary-distribution-among-teams",
    "href": "posts/nba/nba.html#salary-distribution-among-teams",
    "title": "NBA",
    "section": "Salary Distribution Among Teams",
    "text": "Salary Distribution Among Teams\nLet‚Äôs start with the salary distribution among teams using seaborn for visualization. ‚Äã‚Äã\n\n\nCode\n\n# Handle missing values in 'Salary' by replacing them with the median salary\nmedian_salary = nba['Salary'].median()\nnba['Salary'].fillna(median_salary, inplace=True)\n\n\n\n\nCode\n# Set the aesthetic style of the plots\nsns.set_style(\"whitegrid\")\n\n# Calculate total salary by team\nteam_salary = (\n    nba\n    .groupby('Team')['Salary']\n    .sum()\n    .reset_index()\n    .sort_values(by='Salary', ascending=False)\n)\n\n# Plot total salary by team\nplt.figure(figsize=(10, 8))\nsns.barplot(data = team_salary,\n            x = 'Salary', y = 'Team',\n            palette = 'coolwarm')\nplt.title('Total Salary Distribution Among NBA Teams')\nplt.xlabel('Total Salary')\nplt.ylabel('Team')\nplt.xticks(rotation=45)\nplt.show()\n\n\n\n\n\nThe visualization above displays the total salary distribution among NBA teams, with teams sorted by their total salary expenditure. This bar plot reveals which teams are the biggest spenders on player salaries and which are more conservative. The color gradient provides a visual cue to easily distinguish between the higher and lower spending teams. Portland Trail Blazers spent most in their players‚Äô salary, followed by Golden State Warriors and Philadelphia 76ers."
  },
  {
    "objectID": "posts/nba/nba.html#player-age-distribution",
    "href": "posts/nba/nba.html#player-age-distribution",
    "title": "NBA",
    "section": "Player Age Distribution",
    "text": "Player Age Distribution\nNext, let‚Äôs explore the Player Age Distribution across the NBA. We‚Äôll create a histogram to visualize how player ages are distributed, which will help us understand if the league trends younger, older, or has a balanced age mix. ‚Äã‚Äã\n\n\nCode\n# Convert 'Birthday' column to datetime format\nfrom dateutil import parser\nnba['Birthday'] = nba['Birthday'].apply(lambda x: parser.parse(x))\n\n# Now, let's calculate the age of each player\nnba['Age'] = (datetime.now() - nba['Birthday']).dt.days // 365\n\n# Plot the age distribution of NBA players\nplt.figure(figsize=(10, 6))\nsns.histplot(nba['Age'],\n             bins = 15,\n             kde = True,\n             color = 'skyblue')\nplt.title('Age Distribution of NBA Players')\nplt.xlabel('Age')\nplt.ylabel('Count')\nplt.show()\n\n\n\n\n\n\nThe histogram above shows the age distribution of NBA players, with a kernel density estimate (KDE) overlay to indicate the distribution shape. The majority of players fall within a certain age range from 25 to 35, illustrating the league‚Äôs age dynamics. The plot helps identify the common ages for NBA players and whether there are significant numbers of very young or older players."
  },
  {
    "objectID": "posts/nba/nba.html#position-wise-salary-insights",
    "href": "posts/nba/nba.html#position-wise-salary-insights",
    "title": "NBA",
    "section": "Position-wise Salary Insights",
    "text": "Position-wise Salary Insights\nMoving on to Position-wise Salary Insights, we‚Äôll examine how average salaries differ across player positions. This analysis could reveal which positions are typically higher-paid, potentially reflecting their value on the basketball court. Let‚Äôs create a box plot to visualize the salary distribution for each position. ‚Äã‚Äã\n\n\nCode\n# Plot salary distribution by player position\nplt.figure(figsize=(10, 6))\nsns.boxplot(data = nba,\n            x = 'Position', y = 'Salary',\n            palette = 'Set2')\nplt.title('Salary Distribution by Position')\nplt.xlabel('Position')\nplt.ylabel('Salary')\nplt.show()\n\n\n\n\n\nThe box plot above illustrates the salary distribution by player position, showcasing the variation in salaries among different positions within the NBA. This visualization helps us understand which positions tend to have higher median salaries and the spread of salaries within each position, including outliers that represent exceptionally high or low salaries. While the positions of C and PG have the widest interquantiles of salaries, the positions of FC, F, G, and GF have the narrowest interquantiles of them."
  },
  {
    "objectID": "posts/nba/nba.html#top-10-highest-paid-players",
    "href": "posts/nba/nba.html#top-10-highest-paid-players",
    "title": "NBA",
    "section": "Top 10 Highest Paid Players",
    "text": "Top 10 Highest Paid Players\nLastly, we‚Äôll identify the Top 10 Highest Paid Players in the NBA. This analysis highlights the star earners of the league, providing insights into which players command the highest salaries and potentially why. Let‚Äôs extract and visualize this information. ‚Äã‚Äã\n\n\nCode\n# Identify the top 10 highest paid players\ntop_10_salaries = nba.sort_values(by='Salary', ascending=False).head(10)\n\n# Plot the top 10 highest paid players\nplt.figure(figsize=(12, 8))\nsns.barplot(data = top_10_salaries,\n            x = 'Salary', y = 'Name',\n            palette = 'viridis')\nplt.title('Top 10 Highest Paid NBA Players')\nplt.xlabel('Salary')\nplt.ylabel('Player')\nplt.show()\n\n\n\n\n\nThe bar chart above reveals the top 10 highest-paid NBA players, showcasing those who stand at the pinnacle of the league in terms of salary. Stephen Curry is the highest-paid NBA player, followed by Russel Westbrook and Chris Paul. This visualization not only highlights the star players who command the highest salaries but also may reflect their marketability, performance, and contribution to their respective teams."
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html",
    "href": "posts/py-basic/blog-python-basics.html",
    "title": "Python Basics",
    "section": "",
    "text": "Python is a high-level, interpreted programming language. This is a simple Python code:\n\n\nCode\nprint('Hello, World!')\n\n\n\n\n\nIn Python, variables can store data of different types without explicitly declaring the type.\nFor example:\n\n\nCode\ninteger_variable = 10\nstring_variable = 'Hello'\nfloat_variable = 10.5\n\nfloat_variable\n\n\n10.5\n\n\n\n\n\nPython supports the usual logical conditions from mathematics:\n\n\nCode\n# Equals: a == b\n# Not Equals: a != b\n# Less than: a &lt; b\n# Less than or equal to: a &lt;= b\n# Greater than: a &gt; b\n# Greater than or equal to: a &gt;= b\n\n\nThese conditions can be used in several ways, most commonly in ‚Äòif statements‚Äô and loops.\n\n\nCode\n# if statement:\nif 5 &gt; 2:\n    print('Five is greater than two!')\n\n\n\n\n\nA function is a block of code which only runs when it is called.\nYou can pass data, known as parameters, into a function.\nA function can return data as a result.\n\n\nCode\n# Defining a function:\ndef my_function():\n    print('Hello from a function')\n\n# Calling a function:\nmy_function()\n\n\n\n\n\nA list is a collection which is ordered and changeable.\nA dictionary is a collection which is unordered, changeable and indexed.\n\n\nCode\n# List example:\nmy_list = ['apple', 'banana', 'cherry']\n\n# Dictionary example:\nmy_dict = {'name': 'John', 'age': 36}"
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html#what-is-python",
    "href": "posts/py-basic/blog-python-basics.html#what-is-python",
    "title": "Python Basics",
    "section": "",
    "text": "Python is a high-level, interpreted programming language. This is a simple Python code:\n\n\nCode\nprint('Hello, World!')"
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html#variables-and-data-types",
    "href": "posts/py-basic/blog-python-basics.html#variables-and-data-types",
    "title": "Python Basics",
    "section": "",
    "text": "In Python, variables can store data of different types without explicitly declaring the type.\nFor example:\n\n\nCode\ninteger_variable = 10\nstring_variable = 'Hello'\nfloat_variable = 10.5\n\nfloat_variable\n\n\n10.5"
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html#control-structures",
    "href": "posts/py-basic/blog-python-basics.html#control-structures",
    "title": "Python Basics",
    "section": "",
    "text": "Python supports the usual logical conditions from mathematics:\n\n\nCode\n# Equals: a == b\n# Not Equals: a != b\n# Less than: a &lt; b\n# Less than or equal to: a &lt;= b\n# Greater than: a &gt; b\n# Greater than or equal to: a &gt;= b\n\n\nThese conditions can be used in several ways, most commonly in ‚Äòif statements‚Äô and loops.\n\n\nCode\n# if statement:\nif 5 &gt; 2:\n    print('Five is greater than two!')"
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html#functions",
    "href": "posts/py-basic/blog-python-basics.html#functions",
    "title": "Python Basics",
    "section": "",
    "text": "A function is a block of code which only runs when it is called.\nYou can pass data, known as parameters, into a function.\nA function can return data as a result.\n\n\nCode\n# Defining a function:\ndef my_function():\n    print('Hello from a function')\n\n# Calling a function:\nmy_function()"
  },
  {
    "objectID": "posts/py-basic/blog-python-basics.html#lists-and-dictionaries",
    "href": "posts/py-basic/blog-python-basics.html#lists-and-dictionaries",
    "title": "Python Basics",
    "section": "",
    "text": "A list is a collection which is ordered and changeable.\nA dictionary is a collection which is unordered, changeable and indexed.\n\n\nCode\n# List example:\nmy_list = ['apple', 'banana', 'cherry']\n\n# Dictionary example:\nmy_dict = {'name': 'John', 'age': 36}"
  },
  {
    "objectID": "listing-danl-310-rw.html",
    "href": "listing-danl-310-rw.html",
    "title": "DANL 310 - Project",
    "section": "",
    "text": "Title\n\n\nDate\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-cw/danl-310-cw-02.html",
    "href": "danl-cw/danl-310-cw-02.html",
    "title": "Classwork 2",
    "section": "",
    "text": "Markdown is a lightweight markup language with plain-text formatting syntax. Its main goal is to be readable and easy to write, even when viewed as plain text. Markdown is widely used for creating formatted text on the web and in various applications such as Quarto.\n\n\n\n\nHeadings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL)\n[DANL 310](https://bcdanl.github.io/310)\n\n\n\nImages are created using ![Alt Text](Image URL).\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)\n\n\n\n\n\n\n&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```\n\n\n\n\n\nDo the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji.\n\n\n\n\n\n\nQuarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-cw/danl-310-cw-02.html#basic-syntax",
    "href": "danl-cw/danl-310-cw-02.html#basic-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "Headings are created by adding one or more # symbols before your heading text. The number of # symbols indicates the level of the heading.\n# Heading 1\n## Heading 2\n### Heading 3\n\n\n\nYou can make text bold by wrapping it with two asterisks **, and italic by using one asterisk *.\n*italic* or _italic_\n**bold** or __bold__\n\n\n\nUnordered lists are created using *, -, or +, while ordered lists are numbered.\n- Item 1\n- Item 2\n  - Subitem 2.1\n  - Subitem 2.2\n1. First item\n2. Second item\n\n\n\nLinks are created using [Link Text](URL)\n[DANL 310](https://bcdanl.github.io/310)\n\n\n\nImages are created using ![Alt Text](Image URL).\n![Geneseo Logo](https://bcdanl.github.io/img/geneseo-logo.gif)"
  },
  {
    "objectID": "danl-cw/danl-310-cw-02.html#advanced-syntax",
    "href": "danl-cw/danl-310-cw-02.html#advanced-syntax",
    "title": "Classwork 2",
    "section": "",
    "text": "&gt; Be yourself. Everyone else is already taken. - Oscar Wilde.\n\n\n\n\nA ton of markdown emojis are available here üòÑ (:smile:)\n\nhttps://github.com/ikatyang/emoji-cheat-sheet\n\n\n\n\n\nCode blocks are created by using triple backticks (```). Optionally, you can specify the language for syntax highlighting.\n```\n\"string\"\n```\n```python\n# Python code block\nimport numpy as np\n```"
  },
  {
    "objectID": "danl-cw/danl-310-cw-02.html#practice-problems",
    "href": "danl-cw/danl-310-cw-02.html#practice-problems",
    "title": "Classwork 2",
    "section": "",
    "text": "Do the following tasks on this Classwork 2 Discussion Board:\n\nBasic Syntax: Write a comment with a heading, an unordered list, an ordered list, a link, and an image.\nAdvanced Syntax: Write a comment that includes a Python code block, a blockquote, and an emoji."
  },
  {
    "objectID": "danl-cw/danl-310-cw-02.html#references",
    "href": "danl-cw/danl-310-cw-02.html#references",
    "title": "Classwork 2",
    "section": "",
    "text": "Quarto Markdown Basics\nStart writing on GitHub"
  },
  {
    "objectID": "danl-qa/danl-310-qa.html",
    "href": "danl-qa/danl-310-qa.html",
    "title": "DANL 210 - Discussion and Q & A Board",
    "section": "",
    "text": "Welcome to our Discussion and Q & A Board! üëã \nThis space is designed for you to engage with your classmates about the course materials.\nWhether you are looking to delve deeper into the slides, share insights, or have questions about the content, this is the perfect place for you.\nIf you have any specific questions to Byeong-Hak (@bcdanl) or your classmates or need clarification on any points, don‚Äôt hesitate to ask here.\nLet‚Äôs collaborate and learn from each other!\nPlease note that all our comments are recorded in here, regardless of whether comments are displayed in this page or not.\n\n\n\n Back to top"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Big & tiny insights through data",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nNBA\n\n\n3 min\n\n\n\nByeong-Hak Choe\n\n\nFebruary 15, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPython Basics\n\n\n1 min\n\n\n\nByeong-Hak Choe\n\n\nFebruary 7, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBeer Markets\n\n\n5 min\n\n\n\nByeong-Hak Choe\n\n\nNovember 2, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n1 min\n\n\n\nByeong-Hak Choe\n\n\nOctober 27, 2023\n\n\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "listing-danl-310-qa.html",
    "href": "listing-danl-310-qa.html",
    "title": "DANL 310 - Q & A",
    "section": "",
    "text": "Title\n\n\nSubtitle\n\n\nDate\n\n\n\n\n\n\nDANL 210 - Discussion and Q & A Board\n\n\nundefined\n\n\nJanuary 21, 2025\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#learning-objectives",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#learning-objectives",
    "title": "Lecture 3",
    "section": "Learning Objectives",
    "text": "Learning Objectives\n\n\n\nggplot grammar"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#grammar-of-graphics",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#grammar-of-graphics",
    "title": "Lecture 3",
    "section": "Grammar of Graphics",
    "text": "Grammar of Graphics\n\n\nA grammar of graphics is a tool that enables us to concisely describe the components of a graphic"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-1",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nAn aesthetic is a visual property (e.g., size, shape, color) of the objects (e.g., class) in your plot.\nYou can display a point in different ways by changing the values of its aesthetic properties."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-2",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   color = class) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-3",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a shape to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   shape = class) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-4",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding a size to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   size = class) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-5",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nAdding an alpha (transparency) to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy, \n                   alpha = class) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-6",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting problem\n\nMany points overlap each other.\n\nThis problem is known as overplotting.\n\nWhen points overlap, it‚Äôs hard to know how many data points are at a particular location.\nOverplotting can obscure patterns and outliers, leading to potentially misleading conclusions.\nWe can set a transparency level (alpha) between 0 (full transparency) and 1 (no transparency)."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-7",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and alpha\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .2)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-8",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-8",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nOverplotting and size\n\nWe can also consider setting size smaller than 1.\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             size = .5)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-9",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-9",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             color = \"blue\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-10",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-10",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\n\n\n\n\nTo set an aesthetic manually, set the aesthetic by name as an argument of your geom_ function; i.e.¬†it goes outside of aes().\n\nYou‚Äôll need to pick a level that makes sense for that aesthetic:\n\nThe name of a color as a character string.\nThe size of a point in mm.\nThe shape of a point as a number, as shown below."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-11",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#aesthetic-mappings-11",
    "title": "Lecture 3",
    "section": "Aesthetic Mappings",
    "text": "Aesthetic Mappings\nSpecifying a color to the plot?\n\n\nggplot(data = mpg) + \n  geom_point( mapping = \n                aes(x = displ, \n                    y = hwy, \n                    color = \"blue\") )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#common-problems-in-ggplot",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#common-problems-in-ggplot",
    "title": "Lecture 3",
    "section": "Common problems in ggplot()",
    "text": "Common problems in ggplot()\n\nOne common problem when creating ggplot2 graphics is to put the + in the wrong place.\n\n\nggplot(data = mpg) \n + geom_point( mapping = \n                 aes(x = displ, \n                     y = hwy) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-1",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOne way to add a variable, particularly useful for categorical variables, is to use facets to split our plot into facets, subplots that each display one subset of the data."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-2",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot by a single variable, use facet_wrap().\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( . ~ class, nrow = 2)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-3",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nTo facet our plot on the combination of two variables, add facet_grid( VAR_ROW ~ VAR_COL ) to our plot call."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-4",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nThe first argument of facet_grid() is also a formula.\n\nThis time the formula should contain two variable names separated by a ~."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-5",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-6",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\nOption scales in facet_*() is whether scales is\n\nfixed (\"fixed\", the default),\nfree in one dimension (\"free_x\", \"free_y\"), or\nfree in two dimensions (\"free\")."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#facets-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#facets-7",
    "title": "Lecture 3",
    "section": "Facets",
    "text": "Facets\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl, \n             scales = \"free_x\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-1",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nHow are these two plots similar?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-2",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nA geom_*() is the geometrical object that a plot uses to represent data.\n\nBar charts use geom_bar();\nLine charts use geom_line();\nBoxplots use the geom_boxplot();\nScatterplots use the geom_point();\nFitted lines use the geom_smooth();\nand many more!\n\nWe can use different geom_*() to plot the same data."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-3",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nScatterplot\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-4",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\nFitted lines\n\n\nggplot(data = mpg) + \n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-5",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nEvery geom function in ggplot2 takes a mapping argument.\nHowever, not every aesthetic works with every geom.\n\nWe could set the shape of a point, but you couldn‚Äôt set the shape of a line;\nWe could set the linetype of a line."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-6",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy, \n                      linetype = drv) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-7",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nSetting method = lm manually in geom_smooth() gives a straight line that fits into data points.\n\n\n\nggplot( data = mpg ) + \n  geom_smooth( mapping = \n                 aes( x = displ, \n                      y = hwy),\n               method = lm)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-8",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-8",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can set the group aesthetic to a categorical variable to draw multiple objects.\n\nggplot2 will draw a separate object for each unique value of the grouping variable."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-9",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-9",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-10",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-10",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy, \n                    group = drv))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-11",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-11",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIn practice, ggplot2 will automatically group the data for these geoms whenever we map an aesthetic to a discrete variable (as in the linetype example).\n\n\n\nggplot(data = mpg) +\n  geom_smooth(\n    mapping = aes(x = displ, \n                  y = hwy, \n                  color = drv),\n    show.legend = FALSE\n  )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-12",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-12",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nTo display multiple geometric objects in the same plot, add multiple geom_*() functions to ggplot():\n\n\n\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy)) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy), \n              method = lm, \n              color = 'red')\n\n\n\n\n\n\n\nUsing geom_point(), geom_smooth(), and geom_smooth(method = lm) together is an excellent option to visualize the relationship between the two variables."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-13",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-13",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nIf we place mappings in a geom function, ggplot2 will treat them as local mappings for the layer.\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class),\n             alpha = .3) + \n  geom_smooth()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-14",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-14",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = displ, \n             y = hwy)) + \n  geom_point(mapping = \n               aes(color = class), \n             alpha = .3) + \n  geom_smooth(data = \n                filter(mpg, \n                       class == \"subcompact\"), \n              se = FALSE)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-15",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#geometric-objects-15",
    "title": "Lecture 3",
    "section": "Geometric Objects",
    "text": "Geometric Objects\n\nWe can use the same idea to specify different data for each layer.\nHere, our smooth line displays just a subset of the mpg data.frame, the subcompact cars.\n\nfilter() is the tidyverse-way to filter observations in a data.frame.\n\nThe local data argument in geom_smooth() overrides the global data argument in ggplot() for that layer only.\nThe standard error (se) tells us how much the predicted values from a model might differ from the actual values we‚Äôre trying to predict.\n\nIt‚Äôs a way to measure how good a quality of prediction is."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-1",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nMany graphs, including bar charts, calculate new values to plot:\n\ngeom_bar(), geom_histogram(), and geom_freqpoly() bin our data and then plot bin counts, the number of observations that fall in each bin.\ngeom_boxplot() computes a summary of the distribution and then display a specially formatted box.\ngeom_smooth() fits a model to our data and then plot predictions from the model."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-2",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA histogram geom_histogram() is a continuous version of a bar chart.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-3",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nWhen using geom_histogram(), we should experiment on either bins or binwidth.\n\n\n\nggplot(diamonds) +\n  geom_histogram(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-4",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nA frequency polygon geom_freqpoly() is a line version of a histogram.\n\n\n\nggplot(diamonds) +\n  geom_freqpoly(aes(x = price), \n                 bins = 200)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#a-little-bit-of-math-for-log",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#a-little-bit-of-math-for-log",
    "title": "Lecture 3",
    "section": "A Little Bit of Math for log()",
    "text": "A Little Bit of Math for log()\n\nlog functionslog examples\n\n\n\nThe logarithm function, \\(y = \\log_{b}\\,(\\,x\\,)\\), looks like ‚Ä¶.\n\n\n\n\n\n\n\n\\(\\log_{10}\\,(\\,100\\,)\\): the base \\(10\\) logarithm of \\(100\\) is \\(2\\), because \\(10^{2} = 100\\)\n\\(\\log_{e}\\,(\\,x\\,)\\): the base \\(e\\) logarithm is called the natural log, where \\(e = 2.718\\cdots\\) is the mathematical constant, the Euler‚Äôs number.\n\\(\\log\\,(\\,x\\,)\\) or \\(\\ln\\,(\\,x\\,)\\): the natural log of \\(x\\) .\n\\(\\log_{e}\\,(\\,7.389\\cdots\\,)\\): the natural log of \\(7.389\\cdots\\) is \\(2\\), because \\(e^{2} = 7.389\\cdots\\)."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nNYC Housing Sales\n\nlibrary(tidyverse)\nsale_df &lt;- read_csv(\n  \"https://bcdanl.github.io/data/home_sales_nyc.csv\")\n\n\nsale_df contains data for residential property sales from September 2017 and August 2018 in NYC.\n\nLet‚Äôs focus on sale.price, a property‚Äôs sales price."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log-1",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nPercentage Change\n1. We should consider using a logarithmic scale when percent change, or change in orders of magnitude, is more important than changes in absolute units.\n\nFor small changes in variable \\(x\\) from \\(x_{0}\\) to \\(x_{1}\\), the following can be shown:\n\n\\[\\Delta \\log(x) \\,= \\, \\log(x_{1}) \\,-\\, \\log(x_{0})\n\\approx\\, \\frac{x_{1} \\,-\\, x_{0}}{x_{0}}\n\\,=\\, \\frac{\\Delta\\, x}{x_{0}}.\\]\n\nFor example, a difference in sale.price of $10,000 means something very different across people with different income/wealth levels."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#the-use-of-log-2",
    "title": "Lecture 3",
    "section": "The use of log()",
    "text": "The use of log()\nWide Range of Skewed Data\n2. We should consider using a log scale when a variable is heavily skewed. - It can help visualize both small and large values effectively.\n\n\nggplot(sale_df, \n       aes(x = sale.price), \n       bins = 500) +\n  geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-5",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nBar charts seem simple, but they are interesting because they reveal something subtle about plots.\nConsider a basic bar chart, as drawn with geom_bar().\nThe following bar chart displays the total number of diamonds in the ggplot2::diamonds data.frame, grouped by cut.\nThe diamonds data.frame comes in ggplot2 and contains information about ~54,000 diamonds, including the price, carat, color, clarity, and cut of each diamond."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-6",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\ngeom_bar() bins our data and then plot bin counts, the number of observations that fall in each bin.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = aes(x = cut))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-7",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\n\nThe algorithm used to calculate new values for a graph is called a stat, short for statistical transformation.\nThe figure below describes how this process works with geom_bar()."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-8",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-8",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\nThere are three reasons we might need to use a stat explicitly:"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-9",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-9",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nObserved Value vs.¬†Number of Observations\n\n1. We might want to override the default stat.\n\n\n\n# to make a simple data.frame\ndemo &lt;- tribble(         \n  ~cut,         ~freq,\n  \"Fair\",       1610,\n  \"Good\",       4906,\n  \"Very Good\",  12082,\n  \"Premium\",    13791,\n  \"Ideal\",      21551 )\n\nggplot(data = demo) +\n  geom_bar(mapping = \n             aes(x = cut, \n                 y = freq), \n           stat = \"identity\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-10",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-10",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nCount vs.¬†Proportion\n\n2. We might want to override the default mapping from transformed variables to aesthetics.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 y = stat(prop), \n                 group = 1))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-11",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#statistical-transformation-11",
    "title": "Lecture 3",
    "section": "Statistical Transformation",
    "text": "Statistical Transformation\nStat summary\n\n3. We might want to draw greater attention to the statistical transformation in our code.\n\n\n\nggplot(data = diamonds) + \n  stat_summary(\n    mapping = aes(x = cut, y = depth),\n    fun.min = min,\n    fun.max = max,\n    fun = median\n  )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-1",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\ncolor and fill aesthetic\n\nWe can color a bar chart using either the color aesthetic, or, more usefully, fill.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 color = cut))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-2",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nfill\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = cut))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-3",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-3",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nNote that the bars are automatically stacked if we map the fill aesthetic to another variable.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-4",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-4",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nStacked bar charts with fill aesthetic\n\nThe stacking is performed automatically by the position adjustment specified by the position argument.\n\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity),\n           position = \"stack\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-5",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-5",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\n\nIf we don‚Äôt want a stacked bar chart with counts, we can use one of two other position options: fill or dodge.\nposition = \"fill\" works like stacking, but makes each set of stacked bars the same height.\n\nThis makes it easier to compare proportions across groups.\n\nposition = \"dodge\" places overlapping objects directly beside one another."
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-6",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-6",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"fill\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"fill\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-7",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#position-adjustment-7",
    "title": "Lecture 3",
    "section": "Position Adjustment",
    "text": "Position Adjustment\nposition = \"dodge\"\n\n\nggplot(data = diamonds) + \n  geom_bar(mapping = \n             aes(x = cut, \n                 fill = clarity), \n           position = \"dodge\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#coordinate-systems-1",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#coordinate-systems-1",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ngeom_abline()\n\nWhat does geom_abline() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() # math: y = ax + b"
  },
  {
    "objectID": "danl-lec/danl-310-lec-03-2025-0129.html#coordinate-systems-2",
    "href": "danl-lec/danl-310-lec-03-2025-0129.html#coordinate-systems-2",
    "title": "Lecture 3",
    "section": "Coordinate Systems",
    "text": "Coordinate Systems\ncoord_fixed()\n\nWhat does coord_fixed() do?\n\n\n\nggplot(data = mpg, \n       mapping = \n         aes(x = cty, \n             y = hwy)) + \n  geom_point() + \n  geom_abline() +\n  coord_fixed()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nUse theme() if you want to tweak the display of an existing theme.\nThe following lists basic ggplot themes:\n\n\n\n\ntheme\ntheme\n\n\n\n\ntheme_grey()\ntheme_gray()\n\n\ntheme_bw()\ntheme_linedraw()\n\n\ntheme_light()\ntheme_dark()\n\n\ntheme_minimal()\ntheme_classic()\n\n\ntheme_void()\ntheme_test()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-1",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-1",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nggplot Themes\n\nggthemes package provides the following themes:\n\ntheme_economist(), theme_wsj(), theme_fivethirtyeight(), theme_gdocs(), theme_map()\n\nhrbrthemes package provides the following themes:\n\ntheme_ipsum(), theme_ipsum_rc(), theme_ft_rc(), and more."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-2",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-2",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\ngapminder data\n\nThe gapminder package include the gapminder data frame.\n\nlibrary(gapminder)\ngapminder\nskim(gapminder)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-3",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-3",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMappings link data to things we see\n\n\nFirst, we tell the core ggplot function what our data is and what our aesthetic mapping is:\n\np &lt;- ggplot(data = gapminder)\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\nWe can then add the geometric object (geom_*()) to the ggplot().\n\np + geom_point()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-4",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-4",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\n\nTell the ggplot() function what our tidy data is.\n\n\nggplot(data = ...)\n\n\nTell ggplot() what relationships we want to see.\n\n\nThe ggplot(mapping = aes(...))\np &lt;- ggplot(data = ... , aes(...))\n\n\nTell ggplot() how we want to see the relationships in our data.\n\n\nChoose a geom_*().\n\n\nLayer on geoms as needed, by adding them to the p object one at a time.\nUse additional functions to adjust scales, labels, tick marks, titles, etc."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-5",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-5",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nBuild your plots layer by layer\np + geom_point() + geom_smooth() \np + geom_point() + geom_smooth(method = \"lm\") \np + geom_point() +\n    geom_smooth(method = \"lm\")\np + geom_point() +\n    geom_smooth(method = \"gam\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-6",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-6",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nIn the following, we map color to continent in the aes() function:\n\np1 &lt;-  ggplot(data = gapminder,\n             mapping = aes(x = gdpPercap, y = lifeExp,\n                           color = continent))\n\nWe then add geoms.\n\np1 + geom_point() +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-7",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-7",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nIn the following, we map color to \"purple\" outside of the aes() function:\n\np2 &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap, y = lifeExp))\n\nWe then add geoms, manually set aethetics, and then adjust scales.\n\np2 + geom_point(color = \"purple\") +\n     geom_smooth(method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-8",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-8",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nHere are another exmaples that set aesthetic mapping manually outside aes() function and inside geom_*() function.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes(x = gdpPercap,\n                          y = lifeExp))\n\np + geom_point(color = \"purple\") +\n    geom_smooth(method = \"loess\") \n\np + geom_point(alpha = 0.3) +\n    geom_smooth(color = \"orange\", se = F, size = 8, method = \"lm\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-9",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-9",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nMapping aesthetics vs setting them\n\n\nLet‚Äôs add scale_*() and labs() functions to ggplot()\n\np + geom_point(alpha = 0.3) +\n    geom_smooth(method = \"gam\") +\n    scale_x_log10(labels = scales::dollar) +\n    labs(x = \"GDP Per Capita\", y = \"Life Expectancy in Years\",\n         title = \"Economic Growth and Life Expectancy\",\n         subtitle = \"Data points are country-years\",\n         caption = \"Source: Gapminder.\")\n\nQ. Is it really the best way to display this country-year data?\n\nWhat are we gaining and losing by ignoring the temporal and country-level structure of the data? How could we do better?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-10",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-10",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nAesthetics can be mapped per geom\n\nWe can have different aesthetic mappings across different geoms:\n\np &lt;- ggplot(data = gapminder, \n            mapping = aes(x = gdpPercap, y = lifeExp))\n\np + geom_point(mapping = aes(color = continent)) +\n    geom_smooth(method = \"loess\")  +\n    scale_x_continuous(trans = scales::log_trans())  # natural log"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-11",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-11",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can use ggsave() to save ggplot output as a .png or .pdf file.\n\nggsave(filename = \"my_figure.png\")\n\nWe can put our recent plot into an object called p_out and then tell ggave() that we want to save that object.\n\np_out &lt;- p + geom_point() +\n    geom_smooth(method = \"loess\") +\n    scale_x_log10()\nggsave(\"my_figure.pdf\", plot = p_out)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-12",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-12",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nSave your work\n\nWe can set the size of ggplot figue:\n\nggsave(\"lifexp_vs_gdp_gradient.pdf\",\n       plot = p_out, height = 8, width = 10, units = \"in\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-13",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-13",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens when you put the geom_smooth() function before geom_point() instead of after it?\n\nWhat does this tell you about how the plot is drawn? Think about how this might be useful when drawing plots."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-14",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-14",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nChange the mappings in the aes() function so that you plot Life Expectancy against population (pop) rather than per capita GDP.\n\nWhat does that look like?\nWhat does it tell you about the unit of observation in the dataset?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-15",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#make-a-plot-15",
    "title": "Lecture 3",
    "section": "Make a plot",
    "text": "Make a plot\nWork a little more with gapminder data\n\nWhat happens if you map color to year instead of continent?\n\nIs the result what you expected?\nThink about what class of object year is.\nRemember you can get a quick look at the top of the data, which includes some shorthand information on the class of each variable, by typing gapminder.\nInstead of mapping color = year, what happens if you try color = factor(year)?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-1",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-1",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nLet‚Äôs get a line plot that draws the trajectory of life expectancy over time for each country in the gapminder data.frame.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line() \n\nWhat happened?\ngeom_line() joins up all the lines for each particular year in the order they appear in the dataset."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-2",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-2",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nWithout group related parameters, ggplot() does not know that the yearly observations in the data are grouped by country.\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( group = country ) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-3",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-3",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGrouped data and the group aesthetic\n\nThe group aesthetic is usually only needed when the grouping information we need to tell ggplot() about is not built-in to the variables being mapped.\n\nHow about color aesthetic, instead of group?\n\n\np &lt;- ggplot(data = gapminder,\n            mapping = aes( x = year,\n                           y = gdpPercap ) )\n\np + geom_line( aes( color = country ) )"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-4",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-4",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nMaking a ‚Äúsmall multiple‚Äù plot by faceting data based on a caterigorical variable allows a lot of information to be presented compactly, and in a consistently comparable way.\n\nfacet_wrap( VAR1 ~ . ) or facet_wrap( . ~ VAR1 )\nfacet_grid( VAR1 ~ . ): row-wise split\nfacet_grid( . ~ VAR1 ): colum-wise split\nfacet_grid( VAR1 ~ VAR2 )\n\n\np + geom_line( aes( group = country ) ) + \n  facet_wrap(~ continent)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-5",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-5",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nLet‚Äôs have all the facetted plots in a single row:\n\np + geom_line(color=\"gray70\", aes(group = country)) +\n    geom_smooth(size = 1.1, method = \"loess\", se = FALSE) +\n    facet_[?] +\n    scale_y_log10(labels=scales::dollar) + \n    theme(axis.text.x = element_text(angle = 45),\n          axis.title.x = element_text(margin = margin(t = 25))) +\n    labs(x = \"Year\", y = \"GDP per capita\",\n         title = \"GDP per capita on Five Continents\")"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-6",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-6",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nThe 2016 General Social Survey data\n\nThe socviz package includes the gss_sm data frame.\n\ngss_sm is a dataset containing an extract from the 2016 General Social Survey.\n\n\ninstall.packages(\"socviz\")\nlibrary(socviz)\n?gss_sm\nglimpse(gss_sm)\nskimr::skim(gss_sm)\ngss_sm &lt;- gss_sm"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-7",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-7",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe the relationship between the age of the respondent and the number of children they have using a scatterplot and a fitted curve.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + [?](alpha = 0.2) +\n    [?]()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-8",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-8",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nDescribe how the relationship between the age of the respondent and the number of children they have varies by sex and race.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    [?]"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-9",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-9",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFacet to make small multiples\n\nThe facet_grid() function is best used when you cross-classify some data by two categorical variables.\n\ne.g., the relationship between the age and the number of children by sex and race\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes( x = age, y = childs ))\n\np + geom_point(alpha = 0.2) +\n    geom_smooth() +\n    facet_grid(sex ~ race + degree)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-10",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-10",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs plot a bar char:\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-11",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-11",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\n\nWhere does count come from?\n\nBar charts, histograms, and frequency polygons bin your data and then plot bin counts, the number of points that fall in each bin.\nSmoothers fit a model to your data and then plot predictions from the model.\nBoxplots compute a robust summary of the distribution and then display a specially formatted box."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-12",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-12",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf we want a chart of relative frequencies rather than counts, we will need to get the prop statistic instead.\nOur call to statistic from the aes() function generically looks like this: &lt;mapping&gt; = &lt;..statistic..&gt;.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-13",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-13",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nWe need to tell ggplot to ignore the x-categories when calculating denominator of the proportion, and use the total number observations instead.\n\nTo do so we specify group = 1 inside the aes() call.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion))\np + geom_bar(mapping = aes(y = ..prop.., group = 1))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-14",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-14",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nLet‚Äôs look at another question from the survey. The gss_sm data contains a religion variable derived from a question asking:\n\n‚ÄúWhat is your religious preference? Is it Protestant, Catholic, Jewish, some other religion, or no religion?‚Äù\n\n\ntable(gss_sm$religion)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-15",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-15",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, color = religion))\np + geom_bar()\n\nIf we map religion to color, only the border lines of the bars will be assigned colors, and the insides will remain gray."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-16",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-16",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nGeoms can transform data\n\nIf the gray bars look boring and we want to fill them with color instead, we can map the religion variable to fill in addition to mapping it to x.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion, fill = religion))\np + geom_bar() + guides( fill = \"none\" )\n\nIf we set guides(fill = \"none\"), the legend about the fill mapping is removed."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-17",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-17",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nA more appropriate use of the fill aesthetic with geom_bar() is to cross-classify two categorical variables.\n\nThe default output of such geom_bar() is a stacked bar chart, with counts on the y-axis.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"fill\")\n\nAn alternative choice is to set the position argument to \"fill\".\n\nIt is to compare proportions across groups."
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-18",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-18",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nWe can use position = \"dodge\" to make the bars within each region of the country appear side by side.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop..))\n\nWhat happened?"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-19",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-19",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nIn this case we should consider grouping variable, religion, so we map religion to the group aesthetic.\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = bigregion, fill = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = religion))"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-20",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-20",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nFrequency plots the slightly awkward way\n\nHow can we have a proportional bar chart such that the sum of all bars in each bigregion is 1?\n\nThere are various ways to do so, and faceting is one of them.\nThe proportions are calculated within each panel, which is the breakdown we wanted.\n\n\np &lt;- ggplot(data = gss_sm,\n            mapping = aes(x = religion))\np + geom_bar(position = \"dodge\",\n             mapping = aes(y = ..prop.., group = bigregion)) +\n    facet_wrap(~ bigregion, ncol = 1)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-21",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-21",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nggplot comes with a dataset, midwest, containing information on counties in several midwestern states of the USA.\n\n?midwest\nglimpse(midwest)\nskim(midwest)\nview(midwest)"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-22",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-22",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nBy default, the geom_histogram() function will choose a bin size for us based on a rule of thumb.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram()"
  },
  {
    "objectID": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-23",
    "href": "danl-lec/danl-310-lec-04-2025-0203.html#show-the-right-number-23",
    "title": "Lecture 3",
    "section": "Show the right number",
    "text": "Show the right number\nHistograms and density plots\n\nWhen drawing histograms it is worth experimenting with bins and also optionally the origin of the x-axis.\n\np &lt;- ggplot(data = midwest,\n            mapping = aes(x = area))\np + geom_histogram(bins = 10)"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html",
    "href": "danl-cw/danl-310-cw-04.html",
    "title": "Classwork 4",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)\n\n\n\n\n\nWhat does show.legend = FALSE do? What happens if you remove it?\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)\n\nAnswer:\n\n\n\n\nRecreate the R code necessary to generate the following graphs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUse the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q1a.",
    "href": "danl-cw/danl-310-cw-04.html#q1a.",
    "title": "Classwork 4",
    "section": "",
    "text": "Run this code in your head and predict what the output will look like. Then, run the code in R and check your predictions.\n\nggplot(data = mpg, \n       mapping = aes(x = displ, y = hwy, \n                     color = drv)) +\n  geom_point(alpha = .4) +\n  geom_smooth(se = FALSE)"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q1b.",
    "href": "danl-cw/danl-310-cw-04.html#q1b.",
    "title": "Classwork 4",
    "section": "",
    "text": "What does show.legend = FALSE do? What happens if you remove it?\n\nggplot(data = mpg) +\n  geom_point(mapping = aes(x = displ, y = hwy, \n                           color = drv),\n             alpha = .5,\n             show.legend = FALSE)\n\nAnswer:"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q1c.",
    "href": "danl-cw/danl-310-cw-04.html#q1c.",
    "title": "Classwork 4",
    "section": "",
    "text": "Recreate the R code necessary to generate the following graphs."
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q1d.",
    "href": "danl-cw/danl-310-cw-04.html#q1d.",
    "title": "Classwork 4",
    "section": "",
    "text": "Use the data.frame, organdata_simple to visualize the yearly trend of the variable donors for each country.\n\n\norgandata_simple &lt;- read_csv('https://bcdanl.github.io/data/organdata_simple.csv')"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q2a.",
    "href": "danl-cw/danl-310-cw-04.html#q2a.",
    "title": "Classwork 4",
    "section": "Q2a.",
    "text": "Q2a.\nWhat does geom_col() do? How is it different to geom_bar()?\nAnswer:"
  },
  {
    "objectID": "danl-cw/danl-310-cw-04.html#q2b.",
    "href": "danl-cw/danl-310-cw-04.html#q2b.",
    "title": "Classwork 4",
    "section": "Q2b.",
    "text": "Q2b.\n\nInstall the R package, nycflights13, which provides the flights data.frame.\n\n\nflights &lt;- nycflights13::flights\nairlines &lt;- nycflights13::airlines\n\nflights &lt;- flights |&gt; \n  left_join(airlines)\n\n\nVisualize the distribution of carrier.\nVisualize how the distribution of carrier varies by origin.\n\nAnswer:"
  }
]